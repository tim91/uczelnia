<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="ant-scripting">
    <property file="local.properties"/>
    <property file="default.properties"/>

    <taskdef resource="org/codehaus/groovy/antlib.xml">
        <classpath path="lib/groovy-all-2.2.2.jar"/>
    	<classpath path="lib/guava-15.0.jar"/>
    </taskdef>

    <target name="hello">
        <groovy>println "Hello World!"</groovy>
    </target>

    <target name="v.powers">
        <groovy>(1..10).each{power -> println 2 ** power}</groovy>
    </target>

    <target name="h.powers">
        <groovy>println ([1, 2, 3, 5, 7, 11].collect{2 ** it}.join(" | "))</groovy>
    </target>

    <target name="functions">
        <groovy>
            def switchCase(text) {
                def letters = text.collect{ letterString ->
                    def letter = letterString as Character
                    if (!letter.isLetter()) {
                        return
                    }
                    
                    letter.isUpperCase() ? letter.toLowerCase() : letter.toUpperCase()
                }
                
                String.valueOf(letters as char[])
            }
            
            println switchCase("qWeRtY")
        </groovy>
    </target>

    <target name="groovy.ant.properties">
        <groovy>println (properties["test.property"] ? "Property is set" : "Property is not set")</groovy>

        <property name="test.property" value="Qwerty"/>

        <groovy>
            println (properties["test.property"] ? "Property is set" : "Property  is not set")
            println properties["test.property"]
            
            properties["test.property"] = "Dvorak"
        </groovy>
        
        <echo message="${test.property}"/>
    </target>

    <target name="groovy.ant.call">
        <groovy>
            ant.echo "This is printed by the 'echo' task"
        
            // calling ant target by the 'antcall' task
            ant.antcall(target : "init")
            
            // a more advanced example - with nested elements
            ant.touch(file : "build/test.txt")
            ant.delete(verbose : true) {
                fileSet(dir : "build") {
                    include(name: "**/*.txt")
                }
            }
        </groovy>
    </target>

    <target name="groovy.ant.task">
        <groovy>
            class Rectangle {
                int width = 5
                int height = 5
                String fill = '#'
                
                public void execute() { height.times{println fill * width} }
            }
            
            project.addTaskDefinition('rect', Rectangle)
        </groovy>

        <echo>First rectangle:</echo>
        <rect/>

        <echo>Second rectangle:</echo>
        <rect width="7" height="3" fill="%"/>
    </target>

    <target name="groovy.console">
        <java classname="groovy.ui.Console" fork="true" spawn="true">
            <classpath path="lib/groovy-all-1.6.0.jar"/>
        </java>
    </target>

	
	
    <path id="ant-scripting.classpath">
        <pathelement location="build"/>
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="init">
        <mkdir dir="build"/>
    </target>

    <target name="clean" description="Cleans the project">
        <delete dir="build"/>
    </target>

    <target name="build" depends="init">
        <groovyc destdir="build">
            <src path="src/groovy"/>
            <classpath refid="ant-scripting.classpath"/>
        </groovyc>
    
        <copy todir="build">
            <fileset dir="src/groovy" excludes="**/*.groovy" />
        </copy>
    </target>
	
	
	<!-- Zadania -->
	
	
	<target name="groovy.zad3">
		<groovy>
            class ShowLanguagesTask extends org.apache.tools.ant.Task{
				String mode;
                def languages = ["PL":"Polish","EN":"English","DE":"German","FR":"French","RU":"Russian"];
                public void execute() {
					String messageTemplate = "Chosen languages:";
					def tab = project.properties["lang."+mode].split(",");
					tab.collect{
						messageTemplate += " " + languages[it];
					}
					println messageTemplate;
				}
            }
            project.addTaskDefinition('showLanguages', ShowLanguagesTask)
        </groovy>
        
		<showLanguages mode="debug"/>
        <showLanguages mode="release"/>
    </target>
	
	<target name="groovy.zad4">
		<groovy>
			import java.util.regex.Pattern
            class DumpPropertiesTask extends org.apache.tools.ant.Task{
				String file,nameMatch,valueMatch;
                public void execute() {
					def props = project.getProperties();
					def list = [];
					if(nameMatch != null){ //te petle sa nieoptymalne, mozna to zrobic lepiej ale wtedy masz trzy warunki
						def namePat = Pattern.compile(nameMatch)
						props.each() { key, value -> if((key =~ namePat).find()) list.add(key + ' = ' + value) };
					}
					if(valueMatch != null){
						def valuePat = Pattern.compile(valueMatch);
						props.each() { key, value -> if((value =~ valuePat).find()) list.add(key + ' = ' + value) };
					}
					if(file != null &amp;&amp; file.length() > 0)
						new File(file).withWriter { out -> list.each() { out.writeLine("${it}")}}
					else
						list.each() { println " ${it}" };
				}
            }
            project.addTaskDefinition('dump', DumpPropertiesTask)
        </groovy>
        
		<dump nameMatch="lang"/>
        <dump nameMatch="release"/>
        <dump nameMatch="lang" valueMatch="PL" file="build/dump.properties"/>
    </target>
	
	<target name="groovy.zad5">
		<groovy>
			import org.apache.tools.ant.types.FileSet
			import java.util.Date
			import java.text.SimpleDateFormat
			import groovy.xml.MarkupBuilder
			import com.google.common.hash.HashCode
			import com.google.common.hash.Hashing
			import com.google.common.io.Files
            class FileSetToMetaLink extends org.apache.tools.ant.Task{
				FileSet filesets;
				String file;
				void addFileset(FileSet fileset) {
			        filesets = fileset;
			    }
				public void execute() {
					def header = project.properties["zad5.xmlHeader"]
					def writer = new StringWriter()
					def xml = new MarkupBuilder(writer)
					def items = []
					filesets.each() {
							def file = new File("${it}")
							println "${it}"
							println "${file.length()}"
							HashCode hc = Files.hash(file, Hashing.md5());
							def el = [name:file.getName(),size:file.length(),identity:"Example",version:1.0,hash:hc.toString()]
							items.add(el)
					};
					def sdf = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ss'Z'");
					xml.metalink(xmlns: 'urn:ietf:params:xml:ns:metalink') {
						  published(sdf.format(new Date()))
						  files{
								items.each{item->
								      file(name:item.name){
										size(item.size)
										identity(item.identity)
										version(item.version)
										hash(type:'MD5',item.hash)
								      }
								    }
						  }
					}
					def content =  writer.toString()
					new File(file).withWriter { out -> out.writeLine(header); out.writeLine(content) }
				}	
	        }
            project.addTaskDefinition('fileToMetaLink', FileSetToMetaLink)
        </groovy>
        
		<fileToMetaLink file="build/metalink.xml">
			<fileset dir="${ant.home}" includes="**/*.jar"/>
		</fileToMetaLink>
    </target>
	
</project>
